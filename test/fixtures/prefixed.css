/* BASICS */

.kokos :global(.CodeMirror) {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
  color: black;
  direction: ltr;
}

/* PADDING */

.kokos :global(.CodeMirror-lines) {
  padding: 4px 0; /* Vertical padding around content */
}
.kokos :global(.CodeMirror pre.CodeMirror-line),
.kokos :global(.CodeMirror pre.CodeMirror-line-like) {
  padding: 0 4px; /* Horizontal padding of content */
}

.kokos :global(.CodeMirror-scrollbar-filler),
.kokos :global(.CodeMirror-gutter-filler) {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.kokos :global(.CodeMirror-gutters) {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}
.kokos :global(.CodeMirror-linenumbers) {
}
.kokos :global(.CodeMirror-linenumber) {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  white-space: nowrap;
}

.kokos :global(.CodeMirror-guttermarker) {
  color: black;
}
.kokos :global(.CodeMirror-guttermarker-subtle) {
  color: #999;
}

/* CURSOR */

.kokos :global(.CodeMirror-cursor) {
  border-left: 1px solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.kokos :global(.CodeMirror div.CodeMirror-secondarycursor) {
  border-left: 1px solid silver;
}
.kokos :global(.cm-fat-cursor .CodeMirror-cursor) {
  width: auto;
  border: 0 !important;
  background: #7e7;
}
.kokos :global(.cm-fat-cursor div.CodeMirror-cursors) {
  z-index: 1;
}
.kokos :global(.cm-fat-cursor-mark) {
  background-color: rgba(20, 255, 20, 0.5);
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
}
.kokos :global(.cm-animate-fat-cursor) {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}
@-moz-keyframes blink {
  .kokos :global(0%) {
  }
  .kokos :global(50%) {
    background-color: transparent;
  }
  .kokos :global(100%) {
  }
}
@-webkit-keyframes blink {
  .kokos :global(0%) {
  }
  .kokos :global(50%) {
    background-color: transparent;
  }
  .kokos :global(100%) {
  }
}
@keyframes blink {
  .kokos :global(0%) {
  }
  .kokos :global(50%) {
    background-color: transparent;
  }
  .kokos :global(100%) {
  }
}

/* Can style cursor different in overwrite (non-insert) mode */
.kokos :global(.CodeMirror-overwrite .CodeMirror-cursor) {
}

.kokos :global(.cm-tab) {
  display: inline-block;
  text-decoration: inherit;
}

.kokos :global(.CodeMirror-rulers) {
  position: absolute;
  left: 0;
  right: 0;
  top: -50px;
  bottom: 0;
  overflow: hidden;
}
.kokos :global(.CodeMirror-ruler) {
  border-left: 1px solid #ccc;
  top: 0;
  bottom: 0;
  position: absolute;
}

/* DEFAULT THEME */

.kokos :global(.cm-s-default .cm-header) {
  color: blue;
}
.kokos :global(.cm-s-default .cm-quote) {
  color: #090;
}
.kokos :global(.cm-negative) {
  color: #d44;
}
.kokos :global(.cm-positive) {
  color: #292;
}
.kokos :global(.cm-header),
.kokos :global(.cm-strong) {
  font-weight: bold;
}
.kokos :global(.cm-em) {
  font-style: italic;
}
.kokos :global(.cm-link) {
  text-decoration: underline;
}
.kokos :global(.cm-strikethrough) {
  text-decoration: line-through;
}

.kokos :global(.cm-s-default .cm-keyword) {
  color: #708;
}
.kokos :global(.cm-s-default .cm-atom) {
  color: #219;
}
.kokos :global(.cm-s-default .cm-number) {
  color: #164;
}
.kokos :global(.cm-s-default .cm-def) {
  color: #00f;
}
.kokos :global(.cm-s-default .cm-variable),
.kokos :global(.cm-s-default .cm-punctuation),
.kokos :global(.cm-s-default .cm-property),
.kokos :global(.cm-s-default .cm-operator) {
}
.kokos :global(.cm-s-default .cm-variable-2) {
  color: #05a;
}
.kokos :global(.cm-s-default .cm-variable-3),
.kokos :global(.cm-s-default .cm-type) {
  color: #085;
}
.kokos :global(.cm-s-default .cm-comment) {
  color: #a50;
}
.kokos :global(.cm-s-default .cm-string) {
  color: #a11;
}
.kokos :global(.cm-s-default .cm-string-2) {
  color: #f50;
}
.kokos :global(.cm-s-default .cm-meta) {
  color: #555;
}
.kokos :global(.cm-s-default .cm-qualifier) {
  color: #555;
}
.kokos :global(.cm-s-default .cm-builtin) {
  color: #30a;
}
.kokos :global(.cm-s-default .cm-bracket) {
  color: #997;
}
.kokos :global(.cm-s-default .cm-tag) {
  color: #170;
}
.kokos :global(.cm-s-default .cm-attribute) {
  color: #00c;
}
.kokos :global(.cm-s-default .cm-hr) {
  color: #999;
}
.kokos :global(.cm-s-default .cm-link) {
  color: #00c;
}

.kokos :global(.cm-s-default .cm-error) {
  color: #f00;
}
.kokos :global(.cm-invalidchar) {
  color: #f00;
}

.kokos :global(.CodeMirror-composing) {
  border-bottom: 2px solid;
}

/* Default styles for common addons */

.kokos :global(div.CodeMirror span.CodeMirror-matchingbracket) {
  color: #0b0;
}
.kokos :global(div.CodeMirror span.CodeMirror-nonmatchingbracket) {
  color: #a22;
}
.kokos :global(.CodeMirror-matchingtag) {
  background: rgba(255, 150, 0, 0.3);
}
.kokos :global(.CodeMirror-activeline-background) {
  background: #e8f2ff;
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.kokos :global(.CodeMirror) {
  position: relative;
  overflow: hidden;
  background: white;
}

.kokos :global(.CodeMirror-scroll) {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}
.kokos :global(.CodeMirror-sizer) {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.kokos :global(.CodeMirror-vscrollbar),
.kokos :global(.CodeMirror-hscrollbar),
.kokos :global(.CodeMirror-scrollbar-filler),
.kokos :global(.CodeMirror-gutter-filler) {
  position: absolute;
  z-index: 6;
  display: none;
}
.kokos :global(.CodeMirror-vscrollbar) {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.kokos :global(.CodeMirror-hscrollbar) {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.kokos :global(.CodeMirror-scrollbar-filler) {
  right: 0;
  bottom: 0;
}
.kokos :global(.CodeMirror-gutter-filler) {
  left: 0;
  bottom: 0;
}

.kokos :global(.CodeMirror-gutters) {
  position: absolute;
  left: 0;
  top: 0;
  min-height: 100%;
  z-index: 3;
}
.kokos :global(.CodeMirror-gutter) {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -30px;
}
.kokos :global(.CodeMirror-gutter-wrapper) {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.kokos :global(.CodeMirror-gutter-background) {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}
.kokos :global(.CodeMirror-gutter-elt) {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.kokos :global(.CodeMirror-gutter-wrapper ::selection) {
  background-color: transparent;
}
.kokos :global(.CodeMirror-gutter-wrapper ::-moz-selection) {
  background-color: transparent;
}

.kokos :global(.CodeMirror-lines) {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}
.kokos :global(.CodeMirror pre.CodeMirror-line),
.kokos :global(.CodeMirror pre.CodeMirror-line-like) {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}
.kokos :global(.CodeMirror-wrap pre.CodeMirror-line),
.kokos :global(.CodeMirror-wrap pre.CodeMirror-line-like) {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.kokos :global(.CodeMirror-linebackground) {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}

.kokos :global(.CodeMirror-linewidget) {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.kokos :global(.CodeMirror-widget) {
}

.kokos :global(.CodeMirror-rtl pre) {
  direction: rtl;
}

.kokos :global(.CodeMirror-code) {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.kokos :global(.CodeMirror-scroll),
.kokos :global(.CodeMirror-sizer),
.kokos :global(.CodeMirror-gutter),
.kokos :global(.CodeMirror-gutters),
.kokos :global(.CodeMirror-linenumber) {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.kokos :global(.CodeMirror-measure) {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.kokos :global(.CodeMirror-cursor) {
  position: absolute;
  pointer-events: none;
}
.kokos :global(.CodeMirror-measure pre) {
  position: static;
}

.kokos :global(div.CodeMirror-cursors) {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
.kokos :global(div.CodeMirror-dragcursors) {
  visibility: visible;
}

.kokos :global(.CodeMirror-focused div.CodeMirror-cursors) {
  visibility: visible;
}

.kokos :global(.CodeMirror-selected) {
  background: #d9d9d9;
}
.kokos :global(.CodeMirror-focused .CodeMirror-selected) {
  background: #d7d4f0;
}
.kokos :global(.CodeMirror-crosshair) {
  cursor: crosshair;
}
.kokos :global(.CodeMirror-line::selection),
.kokos :global(.CodeMirror-line > span::selection),
.kokos :global(.CodeMirror-line > span > span::selection) {
  background: #d7d4f0;
}
.kokos :global(.CodeMirror-line::-moz-selection),
.kokos :global(.CodeMirror-line > span::-moz-selection),
.kokos :global(.CodeMirror-line > span > span::-moz-selection) {
  background: #d7d4f0;
}

.kokos :global(.cm-searching) {
  background-color: #ffa;
  background-color: rgba(255, 255, 0, 0.4);
}

/* Used to force a border model for a node */
.kokos :global(.cm-force-border) {
  padding-right: 0.1px;
}

@media print {
  /* Hide the cursor when printing */
  .kokos :global(.CodeMirror div.CodeMirror-cursors) {
    visibility: hidden;
  }
}

/* See issue #2901 */
.kokos :global(.cm-tab-wrap-hack:after) {
  content: '';
}

/* Help users use markselection to safely style text background */
.kokos :global(span.CodeMirror-selectedtext) {
  background: none;
}

